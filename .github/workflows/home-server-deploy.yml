name: Home server deployment
on:
  workflow_call:
    inputs:
      ARTIFACT_NAME:
        required: true
        type: string
      DEPLOY_PATH:
        required: true
        type: string
      POSTDEPLOY_SCRIPT_PATH:
        required: false
        type: string
    secrets:
      PRIVATE_KEY:
        required: true
      SERVER_FINGERPRINT:
        required: true
      SSH_HOST:
        required: true
      SSH_USER:
        required: true
jobs:
  deploy:
    runs-on: [self-hosted]
    steps:
    - name: download artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{inputs.ARTIFACT_NAME}}
        path: /tmp/dist
    - name: setup SSH key and known_hosts
      run: |
        mkdir ~/.ssh
        chmod 700 ~/.ssh
        echo "${{secrets.PRIVATE_KEY}}" > ~/.ssh/id_rsa
        chmod 400 ~/.ssh/id_rsa
        echo "${{secrets.SERVER_FINGERPRINT}}" >> ~/.ssh/known_hosts
        chmod 400 ~/.ssh/known_hosts
    - name: deploy package
      run: |
        zip -r package.zip /tmp/dist
        ssh ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} mkdir ${{secrets.DEPLOY_PATH}} 
        scp package.zip ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}}:${{inputs.DEPLOY_PATH}}/package.zip
        ssh ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} tar -xf ${{secrets.DEPLOY_PATH}}/package.zip -C ${{secrets.DEPLOY_PATH}}
        ssh ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} rm ${{secrets.DEPLOY_PATH}}/package.zip
    - name: run postdeploy script
      run: |
        if [ -z "${{inputs.POSTDEPLOY_SCRIPT_PATH}}" ]
        then
          echo "No postdeploy script provided, skipping."
        else
          ssh ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} 'bash -s' < ${{inputs.POSTDEPLOY_SCRIPT_PATH}}
        fi
    - name: clean up
      if: always()
      run: |
        rm -rf ~/.ssh
        rm -rf /tmp/dist
