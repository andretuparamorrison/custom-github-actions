name: Home server deployment
on:
  workflow_call:
    inputs:
      DEPLOY_PATH:
        required: true
        type: string
      PACKAGE_PATH:
        required: true
        type: string
      POSTDEPLOY_SCRIPT_PATH:
        required: false
        type: string
    secrets:
      PRIVATE_KEY:
        required: true
      SERVER_FINGERPRINT:
        required: true
      SSH_HOST:
        required: true
      SSH_USER:
        required: true
jobs:
  deploy:
    runs-on: [self-hosted]
    steps:
    - name: setup SSH key and known_hosts
      run: |
        mkdir /tmp/home-server-deploy
        echo "${{secrets.PRIVATE_KEY}}" > /tmp/home-server-deploy/private-key
        chmod 400 /tmp/home-server-deploy/private-key
        echo "${{secrets.SERVER_FINGERPRINT}}" >> ~/.ssh/known_hosts
    - name: deploy package
      run: |
        zip -r /tmp/home-server-deploy/package.zip ${{inputs.PACKAGE_PATH}}
        ssh -i /tmp/home-server-deploy/private-key ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} mkdir ${{secrets.DEPLOY_PATH}} 
        scp -i /tmp/home-server-deploy/private-key /tmp/home-server-deploy/package.zip ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}}:${{inputs.DEPLOY_PATH}}/package.zip
        ssh -i /tmp/home-server-deploy/private-key ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} tar -xf ${{secrets.DEPLOY_PATH}}/package.zip -C ${{secrets.DEPLOY_PATH}}
        ssh -i /tmp/home-server-deploy/private-key ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} rm ${{secrets.DEPLOY_PATH}}/package.zip
    - name: run postdeploy script
      run: |
        if [ -z "${{inputs.POSTDEPLOY_SCRIPT_PATH}}" ]
        then
          echo "No postdeploy script provided, skipping."
        else
          ssh ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} 'bash -s' < ${{inputs.POSTDEPLOY_SCRIPT_PATH}}
        fi
